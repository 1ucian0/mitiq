---
jupytext:
  text_representation:
    extension: .myst
    format_name: myst
    format_version: 0.13
    jupytext_version: 1.11.4
kernelspec:
  display_name: Python 3
  language: python
  name: python3
---


# What is the theory behind ZNE?


Zero noise extrapolation (ZNE) {cite}`Giurgica_Tiron_2020_arXiv` is an error
mitigation technique used to extrapolate the noiseless expectation value of an
observable from a range of expectation values computed at different noise levels.
In Mitiq, this process works in two steps:

- **Step 1: Intentionally scale noise** by manually inserting gates in a manner
that keeps the logic of input circuit unchanged. The number of gates inserted is
dependent on the scale factor. Different scale factor values will calculate the
expectation value at different noise leveles.

- **Step 2: Extrapolate to the noiseless limit** by fitting a curve [via one of
the various methods available in Mitiq](https://mitiq.readthedocs.io/en/stable/apidoc.html#module-mitiq.zne.inference)
to the expectation values calculated at different noise levels to extrapolate the
noiseless expectation value.

## Scaling Noise by Unitary Folding

In ZNE, if a quantum circuit is implemented via gates, the circuit depth is increased
for gates $G$ in the circuit by mapping as $G \mapsto G G^\dagger G$. Here, $G$
can be a set of all the gates or a portion of gates in a quantum circuit. When all
the gates are to be mapped as discussed previously, the process is known as *global
folding*, while if only some gates in the circuit are to be folded, the procedure implemented
is known as *local folding*. Thus, in either case noise caused due to physical implementations
of unitary gates on gate-model devices is scaled by inserting additional gates
in the circuit.

```{figure} ../img/zne_global_folding.png
---
width: 500
name: figzne_global
---
The diagram demonstrates how gates are inserted in a circuit for ZNE when the goal is to scale noise by folding the entire circuit (*global folding*).
```

```{figure} ../img/zne_local_folding.png
---
width: 500
name: figzne_local
---
The diagram demonstrates how gates are inserted in a circuit for ZNE when the goal is to fold some gates in the circuit to scale noise (*local folding*).
```

The same idea applies to devices with pulse-level access for ZNE {cite}`Kandala_2019_Nature, Kandala_2019_Nature`.
The noise of the device can be altered by increasing the time over which pulses
are implemented but keeps the original circuit unchanged.

```{figure} ../img/zne_pulse_stretching.png
---
width: 500
name: figzne_pulse
---
The diagram demonstrates how pulse stretching is used to increase noise in a physical device for ZNE.
```

In both gate-model and pulse-model scenarios, let $\tau$ be a parameter quantifying
noise in the circuit. When the scale factor $\lambda$ is used to increase the circuit noise,
the noise parameter will also change dependent on $\lambda$ as $\tau^\prime = \lambda \tau$.
It can be observed that by default, for $\lambda = 1$, the input circuit remains unchanged
as the new noise parameter is the same as the initial noise parameter $\tau^\prime = \tau$.
Note that here initial noise parameter $\tau$ is the noise of the physical device without
any scaling.

Let $E(\tau)$ be some circuit observable described as a function of the noise parameter
and $\rho$ be the state prepared by the quantum circuit of interest. The expectation
value can be described as a function of noise parameter as following:

$$
\langle E(\tau^\prime) \rangle = \text{Tr}[\rho E(\tau^\prime)]
$$

We wish to estimate $\langle E(\tau=0) \rangle$ by calculating a range of different
$\langle E(\tau^\prime) \rangle$ as dictated by different values of $\lambda$. In
order to be consistent with [notation introduced previously in the documentation](https://mitiq.readthedocs.io/en/latest/guide/pec-5-theory.html#error-cancellation)
$\langle E(\tau=0) \rangle$ could be re-labeled as $\langle E\rangle_{\rm ideal}$ and the noisy expectation
values $\langle E(\tau^\prime) \rangle$ could be re-labeled as
$\langle E(\tau) \rangle_{\rm noisy}$.

The ideal expectation value can be extrapolated as shown below. $S$ is the set of
chosen scale factors, $n_{\lambda}$ is a coefficient dependent on the scale factor
when noisy expectation value is calculated after scaling the noise in the circuit.
$\Delta$ is the variance error caused by choosing some extrapolation model.

$$
\langle E\rangle_{\rm ideal} = \sum_{\lambda \in S} n_{\lambda} \langle E_{\lambda} \rangle_{\rm noisy} + \Delta
$$


Different extrapolation methods can be used for $\langle E\rangle_{\rm ideal}$. A
detailed discussion about the extrapolation methods is skipped as it is [available
here](https://mitiq--1021.org.readthedocs.build/en/1021/guide/zne-3-options.html#extrapolation-methods-factory-objects).
